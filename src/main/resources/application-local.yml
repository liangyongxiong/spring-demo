# application.yml

debug: false

logging:
  config: classpath:logback.xml

server:
  port: 8888
  maxHttpHeaderSize: 102400
  # 修改内置tomcat参数
  tomcat:
    uri-encoding: UTF-8
    max-http-post-size: -1

spring:
  application:
    name: demo

  http:
    encoding:
      force: true
      charset: UTF-8
      enabled: true

  mvc:
    favicon:
      enabled: true

  redis:
    host: 127.0.0.1
    port: 6379
    database: 0
    password:
    timeout: 0
    # 连接池
    pool:
      # 最大连接数（使用负值表示没有限制）
      max-active: 8
      # 最大阻塞等待时间（使用负值表示没有限制）
      max-wait: -1
      # 最大空闲连接
      max-idle: 8
      # 最小空闲连接
      min-idle: 0

  mongodb:
    host: 127.0.0.1
    port: 27017
    database: demo
    username:
    password:

  mysql:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/demo?useSSL=false&serverTimezone=UTC&useUnicode=true&characterEncoding=utf8&allowPublicKeyRetrieval=true
    username: root
    password: root
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    # 连接池初始化大小，最小，最大
    initialSize: 1
    minIdle: 3
    maxActive: 20
    # 配置获取连接等待超时的时间（毫秒）
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接（毫秒）
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间（毫秒）
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: false
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 配置DruidStatFilter
    web-stat-filter:
      enabled: true
      url-pattern: "/*"
      exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
    # 配置DruidStatViewServlet
    stat-view-servlet:
      enabled: true
      url-pattern: "/druid/*"
      # IP白名单(没有配置或者为空，则允许所有访问)
      allow: 127.0.0.1,192.168.1.20
      # IP黑名单 (存在共同时，deny优先于allow)
      deny: 192.168.1.10
      # 禁用HTML页面上的“Reset All”功能
      reset-enable: false
      # 登录名
      login-username: admin
      # 登录密码
      login-password: 12345

  jpa:
    # 数据库类型
    database: mysql
    # 是否打印 sql
    show-sql: true
    # 是否格式化 sql
    #format_sql: true
    # 是否自动创建 table
    generate-ddl: true
    # 设置 InnoDB 引擎（默认为 MyISAM 引擎, 不支持事务回滚）
    database-platform: org.hibernate.dialect.MySQL57InnoDBDialect
    hibernate:
      # none - This is the default for MySQL, no change to the database structure.
      # update - Hibernate changes the database according to the given Entity structures.
      # create - Creates the database every time, but don’t drop it when close.
      # create-drop - Creates the database then drops it when the SessionFactory closes.
      ddl-auto: update
      # 命名策略，会将Java代码中的驼峰命名法映射到数据库中会变成下划线法
      #naming.physical-strategy: org.springframework.boot.orm.jpa.hibernat.SpringPhysicalNamingStrategy

  kafka:
    producer:
      servers: 127.0.0.1:9092
      retries: 0
    consumer:
      servers: 127.0.0.1:9092
      group.id: demo-consumer-group
      enable.auto.commit: true
      session.timeout: 6000
      auto.offset.reset: latest

  #quartz:
  #  properties:
  #    org.quartz.scheduler:
  #      # instanceName: clusteredScheduler
  #      instanceId: AUTO
  #    org.quartz.threadPool:
  #      class: org.quartz.simpl.SimpleThreadPool
  #      threadCount: 5
  #      threadPriority: 5
  #      threadsInheritContextClassLoaderOfInitializingThread: true
  #    org.quartz.jobStore:
  #      class: org.quartz.simpl.RAMJobStore
  #      misfireThreshold: 5000
  #  overwrite-existing-jobs: true

  feign:
    baiduClient:
      url: https://www.baidu.com/

#hystrix:
#  command:
#    default:
#      execution:
#        isolation:
#          thread:
#            timeoutInMilliseconds: 4000