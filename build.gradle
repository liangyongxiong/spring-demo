plugins {
    id "java"
    id "org.springframework.boot" version "2.1.4.RELEASE"

    // https://github.com/ewerk/gradle-plugins
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

apply plugin: "io.spring.dependency-management"
apply plugin: "idea"

group = "com.example.demo"
version = "0.0.1.SNAPSHOT"
sourceCompatibility = "1.8"

springBoot {
    mainClassName = "com.example.demo.Application"
}

repositories {
    mavenCentral()

    //maven { url "http://repo.spring.io/libs-snapshot" }
    //maven { url "https://plugins.gradle.org/m2/" }

    // https://spring.io/blog/2018/05/17/spring-data-lovelace-m3-released
    // https://www.baeldung.com/spring-data-mongodb-transactions
    maven { url "https://repo.spring.io/milestone" }	// for Spring Data Lovelace M3

    //jcenter()
}

dependencies {
    // test
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.1.4.RELEASE'
    //compile group: 'org.mockito', name: 'mockito-core' version: '2.23.4'

    // web
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.1.4.RELEASE'

    // lombok
    compile group: 'org.projectlombok', name: 'lombok', version: '1.18.6'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.6'

    // json
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.56'

    // collection
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.3'

    // feign
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '2.1.1.RELEASE'

    // aop
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: '2.1.4.RELEASE'

    // redis
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: '2.1.4.RELEASE'
    compile group: 'redis.clients', name: 'jedis', version: '2.9.3'

    // druid
    compile group: 'com.alibaba', name: 'druid-spring-boot-starter', version: '1.1.9'

    // h2
    compile group: 'com.h2database', name: 'h2', version: '1.4.199'

    // mysql
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.15'
    compile group: 'com.vladmihalcea', name: 'hibernate-types-52', version: '2.4.2'	    // for json column type

    // mybatis
    //compile group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '1.3.2'

    // mongodb
    compile group: 'org.springframework.data', name: 'spring-data-mongodb', version: '2.1.0.RELEASE'
    compile group: 'org.springframework.data', name: 'spring-data-releasetrain', version: 'Lovelace-M3'	    // for mongo transaction

    // jpa
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.1.4.RELEASE'
    annotationProcessor	group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.1-api', version: '1.0.2.Final'

    // querydsl
    compile group: 'com.querydsl', name: 'querydsl-core', version: '4.2.1'
    compile group: 'com.querydsl', name: 'querydsl-jpa', version: '4.2.1'
    compile group: 'com.querydsl', name: 'querydsl-mongodb', version: '4.2.1'
    annotationProcessor group: 'com.querydsl', name: 'querydsl-apt', version: '4.2.1'

    // kafka
    compile group: 'org.springframework.kafka', name: 'spring-kafka', version: '2.2.5.RELEASE'

    // quartz
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-quartz', version: '2.1.4.RELEASE'
}

task copyFiles(type: Copy, group: "Custom", description: "Copies sources to the dest directory") {
    from "src"
    into "dest"
}

task zipFiles(type: Zip, group: "Custom", description: "Archives sources in a zip file") {
    from "src"
    setArchiveName "dhl-sh-adapter-0.0.1.zip"
}

querydsl {
    querydslSourcesDir = "src/main/generated"
    springDataMongo = true		// MongoAnnotationProcessor
    jpa = true					// JPAAnnotationProcessor
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

compileJava {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydsl.querydslSourcesDir)
}

idea {
    module {
        sourceDirs += file(querydsl.querydslSourcesDir)
    }
}

/*
task generateQueryDSL(type: JavaCompile, group: 'other', description: 'Generates the QueryDSL query types') {
	//def HIBERNATE_PROC = "com.querydsl.apt.hibernate.HibernateAnnotationProcessor"
	//def JDO_PROC = "com.querydsl.apt.jdo.JDOAnnotationProcessor"
	//def MORPHIA_PROC = "com.querydsl.apt.morphia.MorphiaAnnotationProcessor"
	//def QUERYDSL_PROC = "com.querydsl.apt.QuerydslAnnotationProcessor"
	//def ROO_PROC = "com.querydsl.apt.roo.RooAnnotationProcessor"
    def JPA_PROC = "com.querydsl.apt.jpa.JPAAnnotationProcessor"
	def SPRING_DATA_MONGO_PROC = "org.springframework.data.mongodb.repository.support.MongoAnnotationProcessor"
	def processors = [JPA_PROC, SPRING_DATA_MONGO_PROC]

	source = sourceSets.main.java
	classpath = configurations.compile
	options.compilerArgs += ["-proc:only", "-processor", processors.join(",")]
	destinationDir = file("src/main/generated")
}

compileJava {
	dependsOn generateQueryDSL
	source generateQueryDSL.destinationDir
}
*/
